import os
import time

# ---------- Color Codes ---------- #
red = "\033[1;31m"
green = "\033[1;32m"
yellow = "\033[1;33m"
blue = "\033[1;34m"
reset = "\033[0m"

# ---------- Function to Clear Screen ---------- #
def clear():
    os.system("clear")

# ---------- Function to Install Tools with Guide ---------- #
def install_tool(tool_name, install_command, usage_command, description):
    clear()
    print(f"{yellow}üîÑ Installing {tool_name}...{reset}")
    os.system(install_command)
    print(f"{green}‚úÖ {tool_name} Installed Successfully!{reset}\n")
    print(f"{blue}üìå How to Use {tool_name}:{reset}")
    print(f"{description}\n")
    print(f"üëâ Run this command: {yellow}{usage_command}{reset}\n")
    input("Press Enter to continue...")

# ---------- Main Menu ---------- #
def main():
    while True:
        clear()
        print(f"""{green}
        üî• Ultimate Termux Hacking Toolkit üî•
        -------------------------------------
        [1] Nmap (Network Scanning)
        [2] Metasploit (Penetration Testing)
        [3] Sqlmap (SQL Injection)
        [4] Hydra (Brute Force Attack)
        [5] Nikto (Web Vulnerability Scanner)
        [6] Aircrack-ng (WiFi Hacking)
        [7] Wifite (Automated WiFi Hacking)
        [8] Slowloris (DDoS Attack)
        [9] Hammer (DDoS Attack)
        [10] SocialFish (Phishing Attack)
        [11] Zphisher (Advanced Phishing)
        [12] Subfinder (Subdomain Finder)
        [13] Tor & Anonsurf (Anonymous Browsing)
        [14] Update All Tools
        [0] Exit
        -------------------------------------{reset}
        """)

        choice = input(f"{yellow}Select an option: {reset}")

        if choice == "1":
            install_tool("Nmap", "pkg install nmap -y", "nmap -h", 
            "Nmap ‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡ßá‡¶ü‡¶ì‡ßü‡¶æ‡¶∞‡ßç‡¶ï ‡¶∏‡ßç‡¶ï‡ßç‡¶Ø‡¶æ‡¶®‡¶ø‡¶Ç ‡¶ü‡ßÅ‡¶≤‡•§ ‡¶è‡¶ü‡¶ø ‡¶¶‡¶ø‡ßü‡ßá IP, Ports, ‡¶è‡¶¨‡¶Ç Vulnerability ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü‡•§")
            
        elif choice == "2":
            install_tool("Metasploit", "pkg install unstable-repo && pkg install metasploit -y", "msfconsole", 
            "Metasploit ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∂‡¶ï‡ßç‡¶§‡¶ø‡¶∂‡¶æ‡¶≤‡ßÄ Penetration Testing Framework‡•§ ‡¶è‡¶ü‡¶ø ‡¶¶‡¶ø‡ßü‡ßá Exploit ‡¶ö‡¶æ‡¶≤‡¶æ‡¶®‡ßã ‡¶Ø‡¶æ‡ßü‡•§")

        elif choice == "3":
            install_tool("Sqlmap", "pkg install python && pip install sqlmap", "sqlmap -h", 
            "Sqlmap ‡¶è‡¶ï‡¶ü‡¶ø SQL Injection ‡¶ü‡ßÅ‡¶≤ ‡¶Ø‡¶æ ‡¶ì‡ßü‡ßá‡¶¨‡¶∏‡¶æ‡¶á‡¶ü‡ßá‡¶∞ Database Hack ‡¶ï‡¶∞‡¶§‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡•§")

        elif choice == "4":
            install_tool("Hydra", "pkg install hydra -y", "hydra -h", 
            "Hydra ‡¶è‡¶ï‡¶ü‡¶ø Brute Force Attack ‡¶ü‡ßÅ‡¶≤ ‡¶Ø‡¶æ Username & Password Crack ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶ï‡¶∞‡ßá‡•§")

        elif choice == "5":
            install_tool("Nikto", "pkg install perl && pkg install nikto -y", "nikto -h", 
            "Nikto ‡¶è‡¶ï‡¶ü‡¶ø Web Vulnerability Scanner, ‡¶Ø‡¶æ ‡¶ì‡ßü‡ßá‡¶¨‡¶∏‡¶æ‡¶á‡¶ü‡ßá‡¶∞ ‡¶¶‡ßÅ‡¶∞‡ßç‡¶¨‡¶≤‡¶§‡¶æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶§‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡•§")

        elif choice == "6":
            install_tool("Aircrack-ng", "pkg install aircrack-ng -y", "airmon-ng", 
            "Aircrack-ng ‡¶è‡¶ï‡¶ü‡¶ø WiFi Hacking ‡¶ü‡ßÅ‡¶≤, ‡¶Ø‡¶æ WPA & WEP Networks Crack ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡•§")

        elif choice == "7":
            install_tool("Wifite", "pkg install wifite -y", "wifite", 
            "Wifite ‡¶è‡¶ï‡¶ü‡¶ø Automated WiFi Hacking ‡¶ü‡ßÅ‡¶≤ ‡¶Ø‡¶æ Aircrack-ng ‡¶è‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá‡•§")

        elif choice == "8":
            install_tool("Slowloris", "git clone https://github.com/gkbrk/slowloris.git && cd slowloris && python3 slowloris.py", 
            "python3 slowloris.py -h", "Slowloris ‡¶è‡¶ï‡¶ü‡¶ø DDoS Attack Tool ‡¶Ø‡¶æ ‡¶ì‡ßü‡ßá‡¶¨‡¶∏‡¶æ‡¶á‡¶ü Down ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡•§")

        elif choice == "9":
            install_tool("Hammer", "git clone https://github.com/cyweb/hammer.git && cd hammer && python3 hammer.py", 
            "python3 hammer.py", "Hammer ‡¶è‡¶ï‡¶ü‡¶ø DDoS Attack ‡¶ü‡ßÅ‡¶≤ ‡¶Ø‡¶æ ‡¶ì‡ßü‡ßá‡¶¨‡¶∏‡¶æ‡¶á‡¶ü‡ßá‡¶∞ ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶æ‡¶∞ Flood ‡¶ï‡¶∞‡ßá‡•§")

        elif choice == "10":
            install_tool("SocialFish", "git clone https://github.com/UndeadSec/SocialFish.git && cd SocialFish && python3 SocialFish.py", 
            "python3 SocialFish.py", "SocialFish ‡¶è‡¶ï‡¶ü‡¶ø Phishing Attack ‡¶ü‡ßÅ‡¶≤ ‡¶Ø‡¶æ Facebook, Gmail, Instagram Hack ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡•§")

        elif choice == "11":
            install_tool("Zphisher", "git clone https://github.com/htr-tech/zphisher.git && cd zphisher && bash zphisher.sh", 
            "bash zphisher.sh", "Zphisher ‡¶è‡¶ï‡¶ü‡¶ø Advanced Phishing Tool ‡¶Ø‡¶æ ‡¶¨‡¶ø‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶∏‡¶æ‡¶á‡¶ü‡ßá‡¶∞ Fake Login Page ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá‡•§")

        elif choice == "12":
            install_tool("Subfinder", "pkg install subfinder -y", "subfinder -d example.com", 
            "Subfinder ‡¶è‡¶ï‡¶ü‡¶ø Subdomain Finder ‡¶Ø‡¶æ ‡¶ì‡ßü‡ßá‡¶¨‡¶∏‡¶æ‡¶á‡¶ü‡ßá‡¶∞ Hidden Subdomains ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßá‡•§")

        elif choice == "13":
            install_tool("Tor & Anonsurf", "pkg install tor && pkg install anonsurf -y", "anonsurf start", 
            "Tor & Anonsurf ‡¶è‡¶ï‡¶ü‡¶ø Anonymous Browsing ‡¶ü‡ßÅ‡¶≤ ‡¶Ø‡¶æ ‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ‡¶Ö‡¶ú‡¶æ‡¶®‡¶æ ‡¶∞‡¶æ‡¶ñ‡¶§‡ßá ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶ï‡¶∞‡¶¨‡ßá‡•§")

        elif choice == "14":
            print(f"{yellow}üîÑ Updating All Tools...{reset}")
            os.system("pkg update -y && pkg upgrade -y")
            print(f"{green}‚úÖ All Tools Updated Successfully!{reset}")

        elif choice == "0":
            print(f"{red}Exiting...{reset}")
            break

        else:
            print(f"{red}‚ùå Invalid choice! Try again.{reset}")

        time.sleep(2)

# ---------- Run the Script ---------- #
if __name__ == "__main__":
    main()
